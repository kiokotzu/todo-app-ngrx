{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/filter/filter.pipe.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/todo/footer/footer.component.css","webpack:///./src/app/todo/footer/footer.component.html","webpack:///./src/app/todo/footer/footer.component.ts","webpack:///./src/app/todo/todo-add/todo-add.component.css","webpack:///./src/app/todo/todo-add/todo-add.component.html","webpack:///./src/app/todo/todo-add/todo-add.component.ts","webpack:///./src/app/todo/todo-item/todo-item.component.css","webpack:///./src/app/todo/todo-item/todo-item.component.html","webpack:///./src/app/todo/todo-item/todo-item.component.ts","webpack:///./src/app/todo/todo-list/todo-list.component.css","webpack:///./src/app/todo/todo-list/todo-list.component.html","webpack:///./src/app/todo/todo-list/todo-list.component.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/store/actions/filter.action.ts","webpack:///./src/store/actions/todo.action.ts","webpack:///./src/store/app.reducers.ts","webpack:///./src/store/reducers/filter.reducer.ts","webpack:///./src/store/reducers/todo.reducer.ts","webpack:///./src/store/todo.model.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-todo></app-todo>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { NgModule } from '@angular/core';\n\nimport { TodoListComponent } from './todo/todo-list/todo-list.component';\nimport { TodoItemComponent } from './todo/todo-item/todo-item.component';\nimport { TodoAddComponent } from './todo/todo-add/todo-add.component';\nimport { TodoFooterComponent } from './todo/footer/footer.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { environment } from '../environments/environment';\nimport { TodoComponent } from './todo/todo.component';\nimport { AppComponent } from './app.component';\nimport { appReducers } from '../store/app.reducers';\nimport { FilterPipe } from './filter/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    TodoComponent,\n    TodoListComponent,\n    TodoItemComponent,\n    TodoAddComponent,\n    TodoFooterComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, // Restrict extension to log-only mode\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Todo } from '../../store/todo.model';\n\nimport * as fromFilter from '../../store/actions/filter.action';\n\n@Pipe({\n  name: 'filterTodo'\n})\n\nexport class FilterPipe implements PipeTransform {\n  transform(todos: Todo[], filterType?: fromFilter.validFilter): Todo[] {\n\n    switch (filterType) {\n      case 'complete':\n        return todos.filter(data => data.complete);\n      case 'pending':\n        return todos.filter(data => !data.complete);\n      default:\n        return todos;\n    }\n\n  }\n}\n","module.exports = \"\"","module.exports = \"<footer class=\\\"info\\\">\\n  <p>Double-click to edit a todo</p>\\n  <!-- Remove the below line ↓ -->\\n  <p>Template by <a href=\\\"http://sindresorhus.com\\\">Sindre Sorhus</a></p>\\n  <!-- Change this out with your name and url ↓ -->\\n  <p>Created by <a href=\\\"http://todomvc.com\\\">you</a></p>\\n  <p>Part of <a href=\\\"http://todomvc.com\\\">TodoMVC</a></p>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<footer class=\\\"footer\\\">\\n  <span class=\\\"todo-count\\\" *ngIf=\\\"hasItems$ | async\\\"><strong>{{pendingItems$ | async}}</strong> item left</span>\\n  <ul class=\\\"filters\\\">\\n    <li *ngFor=\\\"let filter of validFiltes\\\">\\n      <a [ngClass]=\\\"{'selected': selectFilter(filter)}\\\" (click)=\\\"applyFilter(filter)\\\">{{filter}}</a>\\n    </li>\\n  </ul>\\n  <button class=\\\"clear-completed\\\" (click)=\\\"deleteComplete()\\\">Clear completed</button>\\n</footer>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport * as fromFilter from '../../../store/actions/filter.action';\nimport { AppState } from '../../../store/app.reducers';\nimport { Store } from '@ngrx/store';\nimport { Todo } from '../../../store/todo.model';\nimport { ClearCompleteTodoAction } from '../../../store/actions/todo.action';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-todo-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class TodoFooterComponent implements OnInit {\n\n  public validFiltes: fromFilter.validFilter[] = ['all', 'complete', 'pending'];\n  public activeFilter: fromFilter.validFilter;\n\n  constructor(private store: Store<AppState>) {\n    this.store\n      .subscribe(data => {\n        this.activeFilter = data.filter;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  get hasItems$(): Observable<boolean> {\n    return this.store.select('todos')\n      .pipe(\n        map( data => data.length > 0 )\n      );\n  }\n\n  get pendingItems$(): Observable<number> {\n    return this.store.select('todos')\n      .pipe(\n        map((data: Todo[]) => {\n          return data.filter((item: Todo) => !item.complete).length;\n        })\n      );\n  }\n\n  public applyFilter(nameFilter: fromFilter.validFilter): void {\n    const action = new fromFilter.SetfilterAction(nameFilter);\n    this.store.dispatch(action);\n  }\n\n  public selectFilter(nameFilter: fromFilter.validFilter): boolean {\n    return this.activeFilter === nameFilter;\n  }\n\n  public deleteComplete(): void {\n    this.store.dispatch(new ClearCompleteTodoAction());\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<header class=\\\"header\\\">\\n  <h1>todos</h1>\\n  <input class=\\\"new-todo\\\"\\n         placeholder=\\\"What needs to be done?\\\"\\n         [formControl]=\\\"textInput\\\"\\n         (keyup.enter)=\\\"addTodo()\\\"\\n         autofocus>\\n</header>\\n\"","import { Store } from '@ngrx/store';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { AppState } from '../../../store/app.reducers';\nimport * as fromTodo from '../../../store/actions/todo.action';\n\n@Component({\n  selector: 'app-todo-add',\n  templateUrl: './todo-add.component.html',\n  styleUrls: ['./todo-add.component.css']\n})\nexport class TodoAddComponent implements OnInit {\n\n  public textInput: FormControl;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.textInput = new FormControl('', Validators.required);\n  }\n\n  public addTodo(): void {\n    if (this.textInput.valid) {\n      const action = new fromTodo.AddTodoAction( this.textInput.value );\n      this.store.dispatch(action);\n      this.textInput.setValue('');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<li [ngClass]=\\\"{'completed': item.complete, 'editing': edit }\\\">\\n  <div class=\\\"view\\\">\\n    <input class=\\\"toggle\\\"\\n           type=\\\"checkbox\\\"\\n           [checked]=\\\"item.complete\\\"\\n           [formControl]=\\\"checkField\\\">\\n    <label (dblclick)=\\\"editText()\\\">{{item.text}}</label>\\n    <button class=\\\"destroy\\\" (click)=\\\"deleteItem()\\\"></button>\\n  </div>\\n  <input class=\\\"edit\\\"\\n         [value]=\\\"item.text\\\"\\n         [formControl]=\\\"txtInput\\\"\\n         (blur)=\\\"editFinish()\\\"\\n         (keyup.enter)=\\\"editFinish()\\\"\\n         #textInput\\n    >\\n</li>\\n\"","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\nimport { DeleteTodoAction, EditTodoAction, ToggleTodoAction } from '../../../store/actions/todo.action';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.css']\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input() item;\n  @ViewChild('textInput') textInput: ElementRef;\n\n  public checkField: FormControl;\n  public txtInput: FormControl;\n  public edit: boolean;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.checkField = new FormControl(this.item.complete);\n    this.txtInput = new FormControl(this.item.text, Validators.required);\n\n    this.checkField.valueChanges.subscribe(\n      () => {\n        const action = new ToggleTodoAction(this.item.id);\n        this.store.dispatch(action);\n      }\n    );\n  }\n\n  public editText(): void {\n    this.edit = true;\n\n    setTimeout(() => {\n      this.textInput.nativeElement.focus();\n    }, 1);\n  }\n\n  public editFinish(): void {\n    this.edit = false;\n\n    if (this.txtInput.valid && this.txtInput.value !== this.item.text){\n      const action = new EditTodoAction(this.item.id, this.txtInput.value);\n      this.store.dispatch(action);\n    }\n  }\n\n  public deleteItem(): void {\n    const action = new DeleteTodoAction(this.item.id);\n    this.store.dispatch(action);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"todo-list\\\">\\n  <app-todo-item *ngFor=\\\"let item of todos | filterTodo:typeFilter\\\" [item]=\\\"item\\\"></app-todo-item>\\n</ul>\\n\"","import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../store/app.reducers';\n\nimport * as fromTypeFilter from '../../../store/actions/filter.action';\nimport { Todo } from '../../../store/todo.model';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent {\n\n  public todos: Todo[];\n  public typeFilter: fromTypeFilter.validFilter;\n\n  constructor(private store: Store<AppState>) {\n    this.store.subscribe((data: any) => {\n      this.todos = data.todos;\n      this.typeFilter = data.filter;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<section class=\\\"todoapp\\\">\\n\\n\\n  <app-todo-add></app-todo-add>\\n\\n  <section class=\\\"main\\\">\\n    <input id=\\\"toggle-all\\\" class=\\\"toggle-all\\\" type=\\\"checkbox\\\">\\n    <label for=\\\"toggle-all\\\" (click)=\\\"toggleAll()\\\">Mark all as complete</label>\\n    <app-todo-list></app-todo-list>\\n  </section>\\n  <app-todo-footer></app-todo-footer>\\n</section>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../store/app.reducers';\nimport { ToggleAllTodoAction } from '../../store/actions/todo.action';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  public complete = false;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n  }\n\n  public toggleAll(): void {\n    this.complete = !this.complete;\n\n    const action = new ToggleAllTodoAction(this.complete);\n\n    this.store.dispatch(action);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","import { Action } from '@ngrx/store';\n\nexport const FILTER = 'FILTER';\n\n\nexport type validFilter = 'all' | 'complete' | 'pending';\n\nexport class SetfilterAction implements Action {\n\n  readonly  type = FILTER;\n\n  constructor(public filter: validFilter) { }\n}\n\nexport type actions = SetfilterAction;\n","import { Action } from '@ngrx/store';\n\nexport const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const TOGGLE_ALL = 'TOGGLE_ALL';\nexport const CLEAR_COMPLETE = 'CLEAR_COMPLETE';\n\n\n\nexport class AddTodoAction implements  Action {\n  readonly  type = ADD_TODO;\n\n  constructor(public text: string) {}\n}\n\nexport class ToggleTodoAction implements  Action {\n  readonly  type = TOGGLE_TODO;\n\n  constructor(public id: number) {}\n}\n\nexport class EditTodoAction implements  Action {\n  readonly  type = EDIT_TODO;\n\n  constructor(public id: number, public text: string) {}\n}\n\nexport class DeleteTodoAction implements  Action {\n  readonly  type = DELETE_TODO;\n\n  constructor(public id: number) {}\n}\n\nexport class ToggleAllTodoAction implements  Action {\n  readonly  type = TOGGLE_ALL;\n\n  constructor(public complete: boolean) {}\n}\n\nexport class ClearCompleteTodoAction implements  Action {\n  readonly  type = CLEAR_COMPLETE;\n}\n\n\nexport type Actions = AddTodoAction | ToggleTodoAction | EditTodoAction | DeleteTodoAction | ToggleAllTodoAction | ClearCompleteTodoAction;\n","import { Todo } from './todo.model';\nimport { ActionReducerMap } from '@ngrx/store';\n\nimport * as fromTodo from '../store/reducers/todo.reducer';\nimport * as fromFilter from '../store/reducers/filter.reducer';\n\nimport * as fromFilterAction from '../store/actions/filter.action';\n\nexport interface AppState {\n  todos: Todo[];\n  filter: fromFilterAction.validFilter;\n}\n\n\nexport const appReducers: ActionReducerMap<AppState> = {\n  todos: fromTodo.todoReducer,\n  filter: fromFilter.filterReducer\n};\n","import * as fromFilter from '../actions/filter.action';\n\nconst statusInit: fromFilter.validFilter = 'all';\n\n\nexport function filterReducer(state = statusInit, action: fromFilter.actions): fromFilter.validFilter {\n  switch (action.type) {\n    case fromFilter.FILTER:\n       return action.filter;\n    default:\n      return state;\n  }\n}\n","import * as fromTodo from './../actions/todo.action';\nimport { Todo } from './../todo.model';\n\nconst statusInit: Todo[] = [];\n\nexport function  todoReducer(state = statusInit, action: fromTodo.Actions): Todo[] {\n\n  switch (action.type) {\n    case fromTodo.ADD_TODO:\n      const todo = new Todo(action.text);\n      return [ ...state, todo ];\n    case fromTodo.TOGGLE_TODO:\n\n      return state.map( item => {\n\n        if (item.id === action.id) {\n          return {\n            ...item,\n            complete: !item.complete\n          };\n        } else {\n          return item;\n        }\n\n      });\n\n    case fromTodo.EDIT_TODO:\n\n      return state.map( item => {\n        if (item.id === action.id ) {\n          return {\n            ...item,\n            text: action.text\n          };\n        } else {\n          return item;\n        }\n      });\n\n    case fromTodo.TOGGLE_ALL:\n      return state.map( item => {\n        return {\n          ...item,\n          complete: action.complete\n        };\n      });\n\n    case fromTodo.DELETE_TODO:\n      return state.filter( item => item.id !== action.id);\n\n    case fromTodo.CLEAR_COMPLETE:\n      return state.filter( data => !data.complete);\n\n    default:\n      return state;\n  }\n\n}\n","export class Todo {\n  public id: number;\n  public text: string;\n  public complete: boolean;\n\n  constructor(text: string) {\n    this.text = text.charAt(0).toUpperCase() + text.slice(1);\n    this.complete = false;\n    this.id = Math.random();\n  }\n\n}\n"],"sourceRoot":""}